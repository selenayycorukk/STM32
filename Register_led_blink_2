#include "stm32f4xx.h"
#include "stm32f4_discovery.h"

uint32_t SystemClock;

void RCC_Config(void)
{
	RCC -> CR &= ~(1 << 0);
	RCC -> CR |= 1 << 16 ;
	while (!(RCC -> CR & (1<<17)));
	RCC -> CR |= 1<<19;
	RCC -> PLLCFGR |= 0X00000000;           // PLL RESET
	RCC -> PLLCFGR |= (1 << 22);            // PLL SOURCE HSE
	RCC -> PLLCFGR |= (4 << 0);             // PLL M 4
	RCC -> PLLCFGR |= (168 << 6);           // PLL N 6

	RCC -> CR |= ( 1 << 24);                // PLL ON
	while ( ! (RCC -> CR & (1 << 25 )));    // WAIT PLL ACTIVE


	RCC -> CFGR &= ~( 1 << 0 );
	RCC -> CFGR |= ( 1 << 1 );              // SYSTEM CLOCK IS PLL

	while ( ! (RCC -> CFGR & (1 << 1 )));   // SELECT SYSTEM CLOCK IS PLL CLOCK


	//8 000 000 -> 168 000 000
}

void GPIO_Config(void)
{
	RCC->AHB1ENR |= 1<<3;     //GPIO clock enable

	GPIOD->MODER |= 1<< 24;   //GPIOD 12. pin output
	GPIOD ->MODER &= ~(1<<25);
	GPIOD->MODER |= 1<< 26;   //GPIOD 13. pin output
	GPIOD ->MODER &= ~(1<<27);
	GPIOD->MODER |= 1<< 28;   //GPIOD 14. pin output
	GPIOD ->MODER &= ~(1<<29);
	GPIOD->MODER |= 1<< 30;   //GPIOD 15. pin output
	GPIOD ->MODER &= ~(1<<31);

	GPIOD ->OSPEEDR |= 0xFF000000;
}

int main(void)
{
	RCC_Config ();
	SystemCoreClockUpdate();
	GPIO_Config();

  while (1)
  {
	  GPIOD ->ODR |= 1<<12;  //12.pin set
	  GPIOD ->ODR |= 1<<13;
	  GPIOD ->ODR |= 1<<14;
	  GPIOD ->ODR |= 1<<15;

	  for(int i=0; i<1600000; i++);

	  GPIOD->ODR &= ~(1<<12);  //12.pin reset
	  GPIOD->ODR &= ~(1<<13);
	  GPIOD->ODR &= ~(1<<14);
	  GPIOD->ODR &= ~(1<<15);

	  for(int i=0; i<1600000; i++);
  }
}


/*
 * Callback used by stm32f4_discovery_audio_codec.c.
 * Refer to stm32f4_discovery_audio_codec.h for more info.
 */
void EVAL_AUDIO_TransferComplete_CallBack(uint32_t pBuffer, uint32_t Size){
  /* TODO, implement your code here */
  return;
}

/*
 * Callback used by stm324xg_eval_audio_codec.c.
 * Refer to stm324xg_eval_audio_codec.h for more info.
 */
uint16_t EVAL_AUDIO_GetSampleCallBack(void){
  /* TODO, implement your code here */
  return -1;
}
